{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortBy","setSortBy","sortStateReverse","setSortStateReverse","todos","setTodos","useEffect","preparedTodos","data","isReversed","CONST_STATE_BY_LENGTH","sort","a","b","length","CONST_STATE_BY_ALPHABET","localeCompare","reverse","prepareTodos","className","type","cn","onClick","map","todo","index","key","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0EAZQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAEGD,K,iCAAAA,E,sCAAAA,M,KAyBE,IAAME,EAAgB,WAC3B,MAA4BC,mBAA0B,MAAtD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA0BJ,mBAASF,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,qBAAU,WACR,IAAMC,EA1BV,SACEC,EACAR,EACAS,GAEA,IAAIL,EAAgB,YAAOI,GAY3B,OAVIR,IAAWJ,EAASc,sBACtBN,EAAMO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UACzBd,IAAWJ,EAASmB,yBAC7BX,EAAMO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MAGnCJ,IACFL,EAAQA,EAAMa,WAGTb,EASiBc,CACpBrB,EACAG,EACAE,GAGFG,EAASE,KACR,CAACP,EAAQE,IAYV,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYrB,IAAWJ,EAASmB,0BAElCO,QAAS,kBAAMrB,EAAUL,EAASmB,0BALpC,iCAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYrB,IAAWJ,EAASc,wBAElCY,QAAS,kBAAMrB,EAAUL,EAASc,wBALpC,4BAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAanB,IAEfoB,QArCR,WACEnB,GAAqBD,IA+BjB,sBAUEF,GAAUE,IACV,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QA1CV,WACErB,EAAU,MACVE,GAAoB,IAqCd,sBAUJ,6BACGC,EAAMmB,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAMD,EAEZ,OACE,oBAAc,UAAQ,OAAtB,SACGD,GADME,YChHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c9e69f51.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nenum SortType {\n  CONST_STATE_BY_LENGTH = 'byLength',\n  CONST_STATE_BY_ALPHABET = 'byAlphabet',\n}\n\nfunction prepareTodos(\n  data: string[],\n  sortBy: SortType | null,\n  isReversed:boolean,\n) {\n  let todos : string[] = [...data];\n\n  if (sortBy === SortType.CONST_STATE_BY_LENGTH) {\n    todos.sort((a, b) => a.length - b.length);\n  } else if (sortBy === SortType.CONST_STATE_BY_ALPHABET) {\n    todos.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (isReversed) {\n    todos = todos.reverse();\n  }\n\n  return todos;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortType | null>(null);\n  const [sortStateReverse, setSortStateReverse] = useState(false);\n  const [todos, setTodos] = useState(goodsFromServer);\n\n  useEffect(() => {\n    const preparedTodos = prepareTodos(\n      goodsFromServer,\n      sortBy,\n      sortStateReverse,\n    );\n\n    setTodos(preparedTodos);\n  }, [sortBy, sortStateReverse]);\n\n  function toggleReverse() {\n    setSortStateReverse(!sortStateReverse);\n  }\n\n  function reset() {\n    setSortBy(null);\n    setSortStateReverse(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SortType.CONST_STATE_BY_ALPHABET,\n          })}\n          onClick={() => setSortBy(SortType.CONST_STATE_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SortType.CONST_STATE_BY_LENGTH,\n          })}\n          onClick={() => setSortBy(SortType.CONST_STATE_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !sortStateReverse,\n          })}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || sortStateReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {todos.map((todo, index) => {\n          const key = index;\n\n          return (\n            <li key={key} data-cy=\"Good\">\n              {todo}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}