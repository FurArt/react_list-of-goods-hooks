{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortBy","setSortBy","sortStateReverse","isReversed","todos","setTodos","useEffect","preparedTodos","data","STATE_BY_LENGTH","STATE_BY_ALPHABET","sort","a","b","length","reverse","prepareTodos","className","type","cn","onClick","map","todo","index","Number","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0EAZQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAEGD,K,2BAAAA,E,gCAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAA4BC,mBAA0B,MAAtD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAuCF,oBAAS,GAAhD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA0BJ,mBAASF,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,qBAAU,WACR,IAAMC,EA/BV,SACEC,EACAR,EACAG,GAEA,IAAIC,EAAgB,YAAOI,GAE3B,OAAQR,GACN,KAAKJ,EAASa,gBAGd,KAAKb,EAASc,kBACZN,EAAMO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAUtC,OAJIX,IACFC,EAAQA,EAAMW,WAGTX,EASiBY,CACpBnB,EACAG,EACAE,GAGFG,EAASE,KACR,CAACP,EAAQE,IAYV,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYnB,IAAWJ,EAASc,oBAElCU,QAAS,kBAAMnB,EAAUL,EAASc,oBALpC,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYnB,IAAWJ,EAASa,kBAElCW,QAAS,kBAAMnB,EAAUL,EAASa,kBALpC,4BAUA,wBACES,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAajB,IAEfkB,QArCR,WACEjB,GAAYD,IA+BR,sBAUEF,GAAUE,IACV,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QA1CV,WACEnB,EAAU,MACVE,GAAW,IAqCL,sBAUJ,6BACGC,EAAMiB,KAAI,SAACC,EAAMC,GAAP,OACT,oBAAwB,UAAQ,OAAhC,SACGD,GADME,OAAOD,aClH1BE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4fbefcaf.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nenum SortType {\n  STATE_BY_LENGTH = 'byLength',\n  STATE_BY_ALPHABET = 'byAlphabet',\n}\n\nfunction prepareTodos(\n  data: string[],\n  sortBy: SortType | null,\n  isReversed:boolean,\n) {\n  let todos : string[] = [...data];\n\n  switch (sortBy) {\n    case SortType.STATE_BY_LENGTH:\n      todos.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.STATE_BY_ALPHABET:\n      todos.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    todos = todos.reverse();\n  }\n\n  return todos;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortType | null>(null);\n  const [sortStateReverse, isReversed] = useState(false);\n  const [todos, setTodos] = useState(goodsFromServer);\n\n  useEffect(() => {\n    const preparedTodos = prepareTodos(\n      goodsFromServer,\n      sortBy,\n      sortStateReverse,\n    );\n\n    setTodos(preparedTodos);\n  }, [sortBy, sortStateReverse]);\n\n  function toggleReverse() {\n    isReversed(!sortStateReverse);\n  }\n\n  function reset() {\n    setSortBy(null);\n    isReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SortType.STATE_BY_ALPHABET,\n          })}\n          onClick={() => setSortBy(SortType.STATE_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SortType.STATE_BY_LENGTH,\n          })}\n          onClick={() => setSortBy(SortType.STATE_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !sortStateReverse,\n          })}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || sortStateReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {todos.map((todo, index) => (\n          <li key={Number(index)} data-cy=\"Good\">\n            {todo}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}